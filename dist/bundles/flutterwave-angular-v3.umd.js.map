{"version":3,"file":"flutterwave-angular-v3.umd.js","sources":["~/flutterwave-angular-v3/src/app/modules/flutterwave.module.ts","~/flutterwave-angular-v3/src/app/modules/flutterwave.service.ts","~/flutterwave-angular-v3/src/app/modules/make-payment/make-payment.component.ts","~/flutterwave-angular-v3/src/app/modules/models.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\nimport {Flutterwave} from './flutterwave.service';\nexport class FlutterwaveModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [MakePaymentComponent] ,\n  providers: [Flutterwave],\n  exports: [MakePaymentComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlutterwaveModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlutterwaveModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlutterwaveModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from './models';\nexport class Flutterwave {\nconstructor() { }\n/**\n * @param {?} paymentData\n * @return {?}\n */\ninlinePay(paymentData: InlinePaymentOptions){\n    FlutterwaveCheckout(paymentData);\n  }\n/**\n * @param {?} paymentData\n * @return {?}\n */\nasyncInlinePay(paymentData: InlinePaymentOptions): Promise<any>{\n\n    let /** @type {?} */ paymentFrame = document.getElementsByName('checkout')[0] ;\n    let /** @type {?} */ initialIframeStyle : any = paymentFrame.getAttribute('style') ;\n\n  return new Promise((resolve, reject) => {\n\n    paymentData = {\n      ...paymentData,\n      callback: ($event) => {\n\n        if(paymentData.closeAfterSuccessfulPayment && paymentData.durationBeforeClose){\n\n          let /** @type {?} */ waitDuration  = paymentData.durationBeforeClose  * 1000 ;\n          setTimeout(\n            ()=>{\n\n              document.getElementsByName('checkout')[0].setAttribute('style', initialIframeStyle + \"z-index: -1; opacity: 0\")\n\n            } , waitDuration\n          )\n        }\n        resolve($event)\n      } ,\n      onclose: () => resolve('closed')\n    }\n\n    FlutterwaveCheckout(paymentData)\n  })\n}\n\n\n\n\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Flutterwave_tsickle_Closure_declarations() {\n/** @type {?} */\nFlutterwave.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlutterwave.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from '../models';\nimport {tryCatch} from 'rxjs/util/tryCatch';\nexport class MakePaymentComponent implements OnInit {\n\n   public_key: string;\n   tx_ref: string;\n   amount: number;\n   currency: string;\n   payment_options: string;\n   redirect_url: string;\n   meta: object; //{ counsumer_id, consumer_mac}\n   customer: object; //{email, phone_number,name}\n   callback: EventEmitter<PaymentSuccessResponse> = new EventEmitter<PaymentSuccessResponse>();\n\n\n   closeAfterSuccessfulPayment: boolean;\n  /*\n   * durationBeforeClose; kndkndn\n   */\n   durationBeforeClose: number ;\n\n   close: EventEmitter<any> = new EventEmitter();\n   customizations: object; //{title, description, logo}\n\n\n\n   text: string;\n   style: any;\n   className: string;\n\n   data: InlinePaymentOptions;\nprivate inlinePaymentOptions: InlinePaymentOptions\n\n  customer_defaults = {\n    email: \"\",\n    phone_number: \"\",\n    name: \"\",\n  }\n  meta_defaults = {\n    consumer_id: '',\n    consumer_mac: '',\n  }\n  customizations_defaults = {\n    title: \"\",\n    description: \"\",\n    logo: \"\",\n  }\nconstructor() {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n  }\n/**\n * @return {?}\n */\nmakePayment() {\n    this.prepareForPayment();\n    FlutterwaveCheckout(this.inlinePaymentOptions);\n\n  }\n/**\n * @return {?}\n */\nprepareForPayment(): void {\n\n    this.customer = this.customer || {}\n    this.meta = this.meta || {}\n    this.customizations = this.customizations || {}\n\n    // get the payment iframe\n    let /** @type {?} */ paymentFrame = document.getElementsByName('checkout')[0] ;\n\n    //get the initial style of the payment iframe\n\n   let /** @type {?} */ initialIframeStyle : any = paymentFrame.getAttribute('style') ;\n\n\n\n    this.inlinePaymentOptions =  this.data ? this.data :  {\n      public_key: this.public_key,\n      tx_ref: this.tx_ref,\n      amount: this.amount,\n      currency: this.currency || 'NGN',\n      payment_options: this.payment_options || \"card, mobilemoney, ussd\",\n      redirect_url: this.redirect_url || '',\n      meta: {...this.meta_defaults, ...this.meta},\n      customer: {...this.customer_defaults, ...this.customer},\n      onclose: () => this.close.emit(),\n      customizations: {...this.customizations_defaults, ...this.customizations}\n    }\n\n    this.inlinePaymentOptions.callback = (response: PaymentSuccessResponse) => {\n\n      if(this.closeAfterSuccessfulPayment && this.durationBeforeClose){\n\n    let /** @type {?} */ waitDuration  = this.durationBeforeClose  * 1000 ;\n        setTimeout(\n          ()=>{\n            //apply the initial style to the payment iframe, so it goes back to it's initial mode\n            console.log(\"setting initial style\");\n            document.getElementsByName('checkout')[0].setAttribute('style', initialIframeStyle + \"z-index: -1; opacity: 0\")\n\n          } , waitDuration\n        )\n      }\n\n      this.callback.emit(response)\n    }\n\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'flutterwave-make-payment',\n  template: `\n    <button\n\n      style=\"{{style}}\"\n      [ngClass]=\"className ? className : 'flutterwave-pay-button' \"\n      (click)=\"makePayment()\">\n      {{text || 'Pay'}}\n    </button>\n  `,\n  styles: [`\n    .flutterwave-pay-button{\n      background-color: #f5a623;\n      border-radius: 4px;\n      border-color: #f5a623;\n      -webkit-box-shadow: 0 2px 3px 0 #ccc;\n              box-shadow: 0 2px 3px 0 #ccc;\n      color: #fff;\n      display: block;\n      font-size: 12px;\n      font-weight: 700;\n      padding: 14px 22px;\n      text-align: center;\n      text-decoration: none;\n      -webkit-transition: all .3s ease-in-out;\n      transition: all .3s ease-in-out;\n\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'public_key': [{ type: Input },],\n'tx_ref': [{ type: Input },],\n'amount': [{ type: Input },],\n'currency': [{ type: Input },],\n'payment_options': [{ type: Input },],\n'redirect_url': [{ type: Input },],\n'meta': [{ type: Input },],\n'customer': [{ type: Input },],\n'callback': [{ type: Output },],\n'closeAfterSuccessfulPayment': [{ type: Input },],\n'durationBeforeClose': [{ type: Input },],\n'close': [{ type: Output },],\n'customizations': [{ type: Input },],\n'text': [{ type: Input },],\n'style': [{ type: Input },],\n'className': [{ type: Input },],\n'data': [{ type: Input },],\n};\n}\n\nfunction MakePaymentComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMakePaymentComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMakePaymentComponent.ctorParameters;\n/** @type {?} */\nMakePaymentComponent.propDecorators;\n/** @type {?} */\nMakePaymentComponent.prototype.public_key;\n/** @type {?} */\nMakePaymentComponent.prototype.tx_ref;\n/** @type {?} */\nMakePaymentComponent.prototype.amount;\n/** @type {?} */\nMakePaymentComponent.prototype.currency;\n/** @type {?} */\nMakePaymentComponent.prototype.payment_options;\n/** @type {?} */\nMakePaymentComponent.prototype.redirect_url;\n/** @type {?} */\nMakePaymentComponent.prototype.meta;\n/** @type {?} */\nMakePaymentComponent.prototype.customer;\n/** @type {?} */\nMakePaymentComponent.prototype.callback;\n/** @type {?} */\nMakePaymentComponent.prototype.closeAfterSuccessfulPayment;\n/** @type {?} */\nMakePaymentComponent.prototype.durationBeforeClose;\n/** @type {?} */\nMakePaymentComponent.prototype.close;\n/** @type {?} */\nMakePaymentComponent.prototype.customizations;\n/** @type {?} */\nMakePaymentComponent.prototype.text;\n/** @type {?} */\nMakePaymentComponent.prototype.style;\n/** @type {?} */\nMakePaymentComponent.prototype.className;\n/** @type {?} */\nMakePaymentComponent.prototype.data;\n/** @type {?} */\nMakePaymentComponent.prototype.inlinePaymentOptions;\n/** @type {?} */\nMakePaymentComponent.prototype.customer_defaults;\n/** @type {?} */\nMakePaymentComponent.prototype.meta_defaults;\n/** @type {?} */\nMakePaymentComponent.prototype.customizations_defaults;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nclass  InlinePaymentOptions {\n  public_key?: string;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  payment_options?: string;\n  redirect_url?: string;\n  meta ?: any;\n  customer : object;\n  callback?: (response: object) => void;\n  onclose?: () => void;\n  customizations?: object;\n  closeAfterSuccessfulPayment?: boolean;\n  durationBeforeClose?: number\n\n}\n\nfunction InlinePaymentOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nInlinePaymentOptions.prototype.public_key;\n/** @type {?} */\nInlinePaymentOptions.prototype.tx_ref;\n/** @type {?} */\nInlinePaymentOptions.prototype.amount;\n/** @type {?} */\nInlinePaymentOptions.prototype.currency;\n/** @type {?} */\nInlinePaymentOptions.prototype.payment_options;\n/** @type {?} */\nInlinePaymentOptions.prototype.redirect_url;\n/** @type {?} */\nInlinePaymentOptions.prototype.meta;\n/** @type {?} */\nInlinePaymentOptions.prototype.customer;\n/** @type {?} */\nInlinePaymentOptions.prototype.callback;\n/** @type {?} */\nInlinePaymentOptions.prototype.onclose;\n/** @type {?} */\nInlinePaymentOptions.prototype.customizations;\n/** @type {?} */\nInlinePaymentOptions.prototype.closeAfterSuccessfulPayment;\n/** @type {?} */\nInlinePaymentOptions.prototype.durationBeforeClose;\n}\n\n\n  declare function  FlutterwaveCheckout(any)\nclass  PaymentSuccessResponse{\n    amount: number\n    currency: string\n    customer: object\n    flw_ref: string\n    status: string\n    transaction_id: number\n    tx_ref: string\n  }\n\nfunction PaymentSuccessResponse_tsickle_Closure_declarations() {\n/** @type {?} */\nPaymentSuccessResponse.prototype.amount;\n/** @type {?} */\nPaymentSuccessResponse.prototype.currency;\n/** @type {?} */\nPaymentSuccessResponse.prototype.customer;\n/** @type {?} */\nPaymentSuccessResponse.prototype.flw_ref;\n/** @type {?} */\nPaymentSuccessResponse.prototype.status;\n/** @type {?} */\nPaymentSuccessResponse.prototype.transaction_id;\n/** @type {?} */\nPaymentSuccessResponse.prototype.tx_ref;\n}\n\n\n  export {\n    InlinePaymentOptions,\n    FlutterwaveCheckout,\n    PaymentSuccessResponse\n  };\n"],"names":["CommonModule","NgModule","Injectable","Input","Output","Component","EventEmitter"],"mappings":"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"}
