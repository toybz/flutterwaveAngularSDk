{"version":3,"file":"flutterwave-v3-angular.umd.min.js","sources":["~/flutterwave-v3-angular/src/app/modules/models.ts","~/flutterwave-v3-angular/src/app/modules/make-payment/make-payment.component.ts","~/flutterwave-v3-angular/src/app/modules/flutterwave.service.ts","~/flutterwave-v3-angular/src/app/modules/make-payment/make-payment.module.ts"],"sourcesContent":["\n\n  class  InlinePaymentOptions {\n  public_key: string;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  payment_options?: string\n  redirect_url?: string;\n  meta ?: any;\n  customer : object\n  callback: (response: object) => void;\n  onclose?: () => void;\n  customizations?: object\n}\n\n  declare function  FlutterwaveCheckout(any)\n\n\n class  PaymentSuccessResponse{\n    amount: number\n    currency: string\n    customer: object\n    flw_ref: string\n    status: string\n    transaction_id: number\n    tx_ref: string\n  }\n\n  export {\n    InlinePaymentOptions,\n    FlutterwaveCheckout,\n    PaymentSuccessResponse\n  }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from '../models';\n\n@Component({\n  selector: 'flutterwave-make-payment',\n  template: `\n    <button\n      class=\"flutterwave-pay-button\"\n      [ngStyle]=\"style\"\n      [ngClass]=\"className\"\n      (click)=\"makePayment()\">\n      {{text || 'Pay'}}\n    </button>\n  `,\n  styles: [`\n    .flutterwave-pay-button{\n      background-color: #f5a623;\n      border-radius: 4px;\n      border-color: #f5a623;\n      -webkit-box-shadow: 0 2px 3px 0 #ccc;\n              box-shadow: 0 2px 3px 0 #ccc;\n      color: #fff;\n      display: block;\n      font-size: 12px;\n      font-weight: 700;\n      padding: 14px 22px;\n      text-align: center;\n      text-decoration: none;\n      -webkit-transition: all .3s ease-in-out;\n      transition: all .3s ease-in-out;\n\n    }\n  `]\n})\nexport class MakePaymentComponent implements OnInit {\n\n  @Input() public_key: string;\n  @Input() tx_ref: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() payment_options: string;\n  @Input() redirect_url: string;\n  @Input() meta: object; //{ counsumer_id, consumer_mac}\n  @Input() customer: object; //{email, phone_number,name}\n  @Output() callback: EventEmitter<PaymentSuccessResponse> = new EventEmitter<PaymentSuccessResponse>();\n  /*\n    callBack interface\n    amount: 90000\n   currency: \"NGN\"\n   customer: {name: \"Demo Customer  Name\", email: \"customer@mail.com\", phone_number: \"08184505144\"}\n   flw_ref: \"FLW-MOCK-e8fbce1a9441489c03f997a55404ff4d\"\n   status: \"successful\"\n   transaction_id: 1468479\n   tx_ref: \"hshbnsfshhs\"\n   */\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  @Input() customizations: object; //{title, description, logo}\n\n\n\n  @Input() text: string;\n  @Input() style: any;\n  @Input() className: string;\n\n  @Input() data: InlinePaymentOptions;\n\n\n\n  private inlinePaymentOptions: InlinePaymentOptions\n\n  customer_defaults = {\n    email: \"\",\n    phone_number: \"\",\n    name: \"\",\n  }\n  meta_defaults = {\n    consumer_id: '',\n    consumer_mac: '',\n  }\n  customizations_defaults = {\n    title: \"\",\n    description: \"\",\n    logo: \"\",\n  }\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  makePayment() {\n    this.prepareForPayment();\n    FlutterwaveCheckout(this.inlinePaymentOptions);\n\n  }\n\n  prepareForPayment(): void {\n    this.customer = this.customer || {}\n    this.meta = this.meta || {}\n    this.customizations = this.customizations || {}\n\n    this.inlinePaymentOptions =  this.data ? this.data :  {\n      public_key: this.public_key,\n      tx_ref: this.tx_ref,\n      amount: this.amount,\n      currency: this.currency || 'NGN',\n      payment_options: this.payment_options || \"card, mobilemoney, ussd\",\n      redirect_url: this.redirect_url || '',\n      meta: {...this.meta_defaults, ...this.meta},\n      customer: {...this.customer_defaults, ...this.customer},\n      callback: (response: PaymentSuccessResponse) => this.callback.emit(response),\n      onclose: () => this.close.emit(),\n      customizations: {...this.customer_defaults, ...this.customizations}\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions} from './models';\n\n\n@Injectable()\nexport class Flutterwave {\n\n  constructor() { }\n\n  inlinePay(paymentData: InlinePaymentOptions){\n\n    FlutterwaveCheckout(paymentData);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MakePaymentComponent } from './make-payment.component';\nimport {Flutterwave} from '../flutterwave.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [MakePaymentComponent] ,\n  providers: [Flutterwave],\n  exports: [MakePaymentComponent]\n})\nexport class FlutterwaveModule { }\n"],"names":["InlinePaymentOptions","PaymentSuccessResponse","MakePaymentComponent","this","callback","EventEmitter","close","customer_defaults","email","phone_number","name","meta_defaults","consumer_id","consumer_mac","customizations_defaults","title","description","logo","prototype","ngOnInit","makePayment","prepareForPayment","FlutterwaveCheckout","inlinePaymentOptions","_this","customer","meta","customizations","data","public_key","tx_ref","amount","currency","payment_options","redirect_url","Object","assign","response","emit","onclose","decorators","type","Component","args","selector","template","styles","ctorParameters","propDecorators","Input","Output","text","style","className","Flutterwave","inlinePay","paymentData","Injectable","FlutterwaveModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"4TACA,IAAAA,EAAA,SAAAA,MAcAC,EAAA,SAAAA,MCbAC,EAAA,WA+CA,SAAAA,IArCGC,KAAHC,SAEoD,IAAIC,EAAAA,aASrDF,KAAHG,MAE8B,IAAID,EAAAA,aAUhCF,KAAFI,kBAKsB,CAJlBC,MAKO,GAJPC,aAKc,GAJdC,KAKM,IAHRP,KAAFQ,cAKkB,CAJdC,YAKa,GAJbC,aAKc,IAHhBV,KAAFW,wBAK4B,CAJxBC,MAKO,GAJPC,YAKa,GAJbC,KAKM,WAEVf,EAAAgB,UAAAC,SAAA,aAKAjB,EAAAgB,UAAAE,YAAA,WACIjB,KAGKkB,oBAFLC,oBAGoBnB,KAAKoB,uBAG7BrB,EAAAgB,UAAAG,kBAAA,WAAA,IAAAG,EAAArB,KACIA,KACKsB,SAAWtB,KAAKsB,UAAY,GAAjCtB,KACKuB,KAAOvB,KAAKuB,MAAQ,GAAzBvB,KACKwB,eAAiBxB,KAAKwB,gBAAkB,GAC7CxB,KACKoB,qBAAuBpB,KAAMyB,KAAOzB,KAAKyB,KAAO,CAAnDC,WACY1B,KAAK0B,WAAjBC,OACQ3B,KAAK2B,OAAbC,OACQ5B,KAAK4B,OAAbC,SACU7B,KAAK6B,UAAY,MAA3BC,gBACiB9B,KAAK8B,iBAAmB,0BAAzCC,aACc/B,KAAK+B,cAAgB,GAAnCR,KAANS,OAAAC,OAAA,GACcjC,KAAOQ,cAAeR,KAAQuB,MAAtCD,SAANU,OAAAC,OAAA,GACkBjC,KAAOI,kBAAmBJ,KAAQsB,UAA9CrB,SACU,SAAAiC,GAAsC,OAAAb,EAAKpB,SAASkC,KAAKD,IAAnEE,QACS,WAAM,OAAAf,EAAKlB,MAAMgC,QAA1BX,eAANQ,OAAAC,OAAA,GACwBjC,KAAOI,kBAAmBJ,KAAQwB,oBAlF1D,GAuFOzB,EAAPsC,WAA2C,CAA3C,CACEC,KAAMC,EAAAA,UAAWC,KAAM,CAAA,CAAvBC,SACU,2BAAVC,SACU,0LAQVC,OACQ,CAAA,gfAsBT5C,EAAD6C,eAAC,WAAA,MAAA,IAEM7C,EAAP8C,eAAgE,CAEhEnB,WADc,CAAA,CAAGY,KAAMQ,EAAAA,QAEvBnB,OADU,CAAA,CAAGW,KAAMQ,EAAAA,QAEnBlB,OADU,CAAA,CAAGU,KAAMQ,EAAAA,QAEnBjB,SADY,CAAA,CAAGS,KAAMQ,EAAAA,QAErBhB,gBADmB,CAAA,CAAGQ,KAAMQ,EAAAA,QAE5Bf,aADgB,CAAA,CAAGO,KAAMQ,EAAAA,QAEzBvB,KADQ,CAAA,CAAGe,KAAMQ,EAAAA,QAEjBxB,SADY,CAAA,CAAGgB,KAAMQ,EAAAA,QAErB7C,SADY,CAAA,CAAGqC,KAAMS,EAAAA,SAErB5C,MADS,CAAA,CAAGmC,KAAMS,EAAAA,SAElBvB,eADkB,CAAA,CAAGc,KAAMQ,EAAAA,QAE3BE,KADQ,CAAA,CAAGV,KAAMQ,EAAAA,QAEjBG,MADS,CAAA,CAAGX,KAAMQ,EAAAA,QAElBI,UADa,CAAA,CAAGZ,KAAMQ,EAAAA,QAEtBrB,KADQ,CAAA,CAAGa,KAAMQ,EAAAA,SC1IjB,IAAAK,EAAA,WACA,SAAAA,YAKAA,EAAApC,UAAAqC,UAAA,SACGC,GACClC,oBACoBkC,MATxB,GAaOF,EAAPd,WAA2C,CAA3C,CACEC,KAAMgB,EAAAA,aAGPH,EAADP,eAAC,WAAA,MAAA,ICfD,IAAAW,EAAA,SAAAA,MAEwCA,EAAxClB,WAA4E,CAD5E,CAEEC,KAAMkB,EAAAA,SAAUhB,KAAM,CAAA,CADtBiB,QAES,CADPC,EAAAA,cAEFC,aAEc,CAAA5D,GADd6D,UAEW,CAAAT,GADXU,QAES,CAAA9D,OAIVwD,EAADX,eAAC,WAAA,MAAA"}
