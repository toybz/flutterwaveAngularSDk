{"version":3,"file":"flutterwave-angular-v3.umd.min.js","sources":["~/flutterwave-angular-v3/src/app/modules/models.ts","~/flutterwave-angular-v3/src/app/modules/make-payment/make-payment.component.ts","~/flutterwave-angular-v3/src/app/modules/flutterwave.service.ts","~/flutterwave-angular-v3/src/app/modules/flutterwave.module.ts"],"sourcesContent":["\n\n  class  InlinePaymentOptions {\n  public_key?: string;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  payment_options?: string;\n  redirect_url?: string;\n  meta ?: any;\n  customer : object;\n  callback?: (response: object) => void;\n  onclose?: () => void;\n  customizations?: object;\n  closeAfterSuccessfulPayment?: boolean;\n  durationBeforeClose?: number\n\n}\n\n  declare function  FlutterwaveCheckout(any)\n\n\n class  PaymentSuccessResponse{\n    amount: number\n    currency: string\n    customer: object\n    flw_ref: string\n    status: string\n    transaction_id: number\n    tx_ref: string\n  }\n\n  export {\n    InlinePaymentOptions,\n    FlutterwaveCheckout,\n    PaymentSuccessResponse\n  }\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from '../models';\nimport {tryCatch} from 'rxjs/util/tryCatch';\n\n@Component({\n  selector: 'flutterwave-make-payment',\n  template: `\n    <button\n\n      style=\"{{style}}\"\n      [ngClass]=\"className ? className : 'flutterwave-pay-button' \"\n      (click)=\"makePayment()\">\n      {{text || 'Pay'}}\n    </button>\n  `,\n  styles: [`\n    .flutterwave-pay-button{\n      background-color: #f5a623;\n      border-radius: 4px;\n      border-color: #f5a623;\n      -webkit-box-shadow: 0 2px 3px 0 #ccc;\n              box-shadow: 0 2px 3px 0 #ccc;\n      color: #fff;\n      display: block;\n      font-size: 12px;\n      font-weight: 700;\n      padding: 14px 22px;\n      text-align: center;\n      text-decoration: none;\n      -webkit-transition: all .3s ease-in-out;\n      transition: all .3s ease-in-out;\n\n    }\n  `]\n})\nexport class MakePaymentComponent implements OnInit {\n\n  @Input() public_key: string;\n  @Input() tx_ref: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() payment_options: string;\n  @Input() redirect_url: string;\n  @Input() meta: object; //{ counsumer_id, consumer_mac}\n  @Input() customer: object; //{email, phone_number,name}\n  @Output() callback: EventEmitter<PaymentSuccessResponse> = new EventEmitter<PaymentSuccessResponse>();\n\n\n  @Input() closeAfterSuccessfulPayment: boolean;\n  /*\n   * durationBeforeClose; kndkndn\n   */\n  @Input() durationBeforeClose: number ;\n\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  @Input() customizations: object; //{title, description, logo}\n\n\n\n  @Input() text: string;\n  @Input() style: any;\n  @Input() className: string;\n\n  @Input() data: InlinePaymentOptions;\n\n  private inlinePaymentOptions: InlinePaymentOptions\n\n  customer_defaults = {\n    email: \"\",\n    phone_number: \"\",\n    name: \"\",\n  }\n  meta_defaults = {\n    consumer_id: '',\n    consumer_mac: '',\n  }\n  customizations_defaults = {\n    title: \"\",\n    description: \"\",\n    logo: \"\",\n  }\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  makePayment() {\n    this.prepareForPayment();\n    FlutterwaveCheckout(this.inlinePaymentOptions);\n\n  }\n\n  prepareForPayment(): void {\n\n    this.customer = this.customer || {}\n    this.meta = this.meta || {}\n    this.customizations = this.customizations || {}\n\n    // get the payment iframe\n    let paymentFrame = document.getElementsByName('checkout')[0] ;\n\n    //get the initial style of the payment iframe\n\n   let initialIframeStyle : any = paymentFrame.getAttribute('style') ;\n\n\n\n    this.inlinePaymentOptions =  this.data ? this.data :  {\n      public_key: this.public_key,\n      tx_ref: this.tx_ref,\n      amount: this.amount,\n      currency: this.currency || 'NGN',\n      payment_options: this.payment_options || \"card, mobilemoney, ussd\",\n      redirect_url: this.redirect_url || '',\n      meta: {...this.meta_defaults, ...this.meta},\n      customer: {...this.customer_defaults, ...this.customer},\n      onclose: () => this.close.emit(),\n      customizations: {...this.customizations_defaults, ...this.customizations}\n    }\n\n    this.inlinePaymentOptions.callback = (response: PaymentSuccessResponse) => {\n\n      if(this.closeAfterSuccessfulPayment && this.durationBeforeClose){\n\n    let waitDuration  = this.durationBeforeClose  * 1000 ;\n        setTimeout(\n          ()=>{\n            //apply the initial style to the payment iframe, so it goes back to it's initial mode\n            console.log(\"setting initial style\");\n            document.getElementsByName('checkout')[0].setAttribute('style', initialIframeStyle + \"z-index: -1; opacity: 0\")\n\n          } , waitDuration\n        )\n      }\n\n      this.callback.emit(response)\n    }\n\n\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from './models';\n\n@Injectable()\nexport class Flutterwave {\n\n  constructor() { }\n\n\n  inlinePay(paymentData: InlinePaymentOptions){\n    FlutterwaveCheckout(paymentData);\n  }\n\n\n  asyncInlinePay(paymentData: InlinePaymentOptions): Promise<any>{\n\n    let paymentFrame = document.getElementsByName('checkout')[0] ;\n    let initialIframeStyle : any = paymentFrame.getAttribute('style') ;\n\n  return new Promise((resolve, reject) => {\n\n    paymentData = {\n      ...paymentData,\n      callback: ($event) => {\n\n        if(paymentData.closeAfterSuccessfulPayment && paymentData.durationBeforeClose){\n\n          let waitDuration  = paymentData.durationBeforeClose  * 1000 ;\n          setTimeout(\n            ()=>{\n\n              document.getElementsByName('checkout')[0].setAttribute('style', initialIframeStyle + \"z-index: -1; opacity: 0\")\n\n            } , waitDuration\n          )\n        }\n        resolve($event)\n      } ,\n      onclose: () => resolve('closed')\n    }\n\n    FlutterwaveCheckout(paymentData)\n  })\n}\n\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\nimport {Flutterwave} from './flutterwave.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [MakePaymentComponent] ,\n  providers: [Flutterwave],\n  exports: [MakePaymentComponent]\n})\nexport class FlutterwaveModule { }\n"],"names":["InlinePaymentOptions","PaymentSuccessResponse","MakePaymentComponent","this","callback","EventEmitter","close","customer_defaults","email","phone_number","name","meta_defaults","consumer_id","consumer_mac","customizations_defaults","title","description","logo","prototype","ngOnInit","makePayment","prepareForPayment","FlutterwaveCheckout","inlinePaymentOptions","_this","customer","meta","customizations","initialIframeStyle","document","getElementsByName","getAttribute","data","public_key","tx_ref","amount","currency","payment_options","redirect_url","Object","assign","onclose","emit","response","closeAfterSuccessfulPayment","durationBeforeClose","waitDuration","setTimeout","console","log","setAttribute","decorators","type","Component","args","selector","template","styles","ctorParameters","propDecorators","Input","Output","text","style","className","Flutterwave","inlinePay","paymentData","asyncInlinePay","Promise","resolve","reject","$event","Injectable","FlutterwaveModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"4TACA,IAAAA,EAAA,SAAAA,MAiBAC,EAAA,SAAAA,MCfAC,EAAA,WA6CA,SAAAA,IAnCGC,KAAHC,SAEoD,IAAIC,EAAAA,aAOrDF,KAAHG,MAE8B,IAAID,EAAAA,aAUhCF,KAAFI,kBAGsB,CAFlBC,MAGO,GAFPC,aAGc,GAFdC,KAGM,IADRP,KAAFQ,cAGkB,CAFdC,YAGa,GAFbC,aAGc,IADhBV,KAAFW,wBAG4B,CAFxBC,MAGO,GAFPC,YAGa,GAFbC,KAGM,WAIVf,EAAAgB,UAAAC,SAAA,aAKAjB,EAAAgB,UAAAE,YAAA,WACIjB,KACKkB,oBAALC,oBACoBnB,KAAKoB,uBAK7BrB,EAAAgB,UAAAG,kBAAA,WAAA,IAAAG,EAAArB,KAEIA,KADKsB,SAAWtB,KAAKsB,UAAY,GAEjCtB,KADKuB,KAAOvB,KAAKuB,MAAQ,GAEzBvB,KADKwB,eAAiBxB,KAAKwB,gBAAkB,GAI7C,IAGGC,EAJgBC,SAASC,kBAAkB,YAAY,GAIfC,aAAa,SAKxD5B,KADKoB,qBAAuBpB,KAAM6B,KAAO7B,KAAK6B,KAAO,CAEnDC,WADY9B,KAAK8B,WAEjBC,OADQ/B,KAAK+B,OAEbC,OADQhC,KAAKgC,OAEbC,SADUjC,KAAKiC,UAAY,MAE3BC,gBADiBlC,KAAKkC,iBAAmB,0BAEzCC,aADcnC,KAAKmC,cAAgB,GAEnCZ,KAANa,OAAAC,OAAA,GADcrC,KAAOQ,cAAeR,KAAQuB,MAEtCD,SAANc,OAAAC,OAAA,GADkBrC,KAAOI,kBAAmBJ,KAAQsB,UAE9CgB,QADS,WAAM,OAAAjB,EAAKlB,MAAMoC,QAE1Bf,eAANY,OAAAC,OAAA,GADwBrC,KAAOW,wBAAyBX,KAAQwB,iBAI5DxB,KADKoB,qBAAqBnB,SAAW,SAAAuC,GAGnC,GAAGnB,EADKoB,6BAA+BpB,EAAKqB,oBAAoB,CAGlE,IADIC,EAA4C,IAA5BtB,EAAKqB,oBAErBE,WACE,WAEEC,QADQC,IAAI,yBAEZpB,SADSC,kBAAkB,YAAY,GAAGoB,aAAa,QAAStB,EAAqB,4BAEnFkB,GAKRtB,EADKpB,SAASsC,KAAKC,OAzGzB,GA+GOzC,EAAPiD,WAA2C,CAE3C,CADEC,KAAMC,EAAAA,UAAWC,KAAM,CAAA,CAEvBC,SADU,2BAEVC,SADU,gMAUVC,OADQ,CAAA,gfAsBTvD,EAADwD,eAAC,WAAA,MAAA,IAEMxD,EAAPyD,eAAgE,CAIhE1B,WAHc,CAAA,CAAGmB,KAAMQ,EAAAA,QAIvB1B,OAHU,CAAA,CAAGkB,KAAMQ,EAAAA,QAInBzB,OAHU,CAAA,CAAGiB,KAAMQ,EAAAA,QAInBxB,SAHY,CAAA,CAAGgB,KAAMQ,EAAAA,QAIrBvB,gBAHmB,CAAA,CAAGe,KAAMQ,EAAAA,QAI5BtB,aAHgB,CAAA,CAAGc,KAAMQ,EAAAA,QAIzBlC,KAHQ,CAAA,CAAG0B,KAAMQ,EAAAA,QAIjBnC,SAHY,CAAA,CAAG2B,KAAMQ,EAAAA,QAIrBxD,SAHY,CAAA,CAAGgD,KAAMS,EAAAA,SAIrBjB,4BAH+B,CAAA,CAAGQ,KAAMQ,EAAAA,QAIxCf,oBAHuB,CAAA,CAAGO,KAAMQ,EAAAA,QAIhCtD,MAHS,CAAA,CAAG8C,KAAMS,EAAAA,SAIlBlC,eAHkB,CAAA,CAAGyB,KAAMQ,EAAAA,QAI3BE,KAHQ,CAAA,CAAGV,KAAMQ,EAAAA,QAIjBG,MAHS,CAAA,CAAGX,KAAMQ,EAAAA,QAIlBI,UAHa,CAAA,CAAGZ,KAAMQ,EAAAA,QAItB5B,KAHQ,CAAA,CAAGoB,KAAMQ,EAAAA,SCrKjB,IAAAK,EAAA,WACA,SAAAA,YAKAA,EAAA/C,UAAAgD,UAAA,SACGC,GAAC7C,oBACoB6C,IAKxBF,EAAA/C,UAAAkD,eAAA,SADGD,GAGC,IAAIvC,EADeC,SAASC,kBAAkB,YAAY,GACdC,aAAa,SAG3D,OADO,IAAIsC,QAAQ,SAACC,EAASC,GAG3BJ,EAAJ5B,OAAAC,OAAA,GACS2B,EADT,CAEM/D,SADU,SAAAoE,GAGR,GAAGL,EADYvB,6BAA+BuB,EAAYtB,oBAAoB,CAG5E,IADIC,EAAmD,IAAnCqB,EAAYtB,oBAEhCE,WACE,WAEElB,SADSC,kBAAkB,YAAY,GAAGoB,aAAa,QAAStB,EAAqB,4BAEnFkB,GAIRwB,EADQE,IAGV/B,QADS,WAAM,OAAA6B,EAAQ,aAIzBhD,oBADoB6C,QAvCxB,GAgDOF,EAAPd,WAA2C,CAE3C,CADEC,KAAMqB,EAAAA,aAGPR,EAADP,eAAC,WAAA,MAAA,IClDD,IAAAgB,EAAA,SAAAA,MAEwCA,EAAxCvB,WAA4E,CAD5E,CAEEC,KAAMuB,EAAAA,SAAUrB,KAAM,CAAA,CADtBsB,QAES,CADPC,EAAAA,cAEFC,aAEc,CAAA5E,GADd6E,UAEW,CAAAd,GADXe,QAES,CAAA9E,OAIVwE,EAADhB,eAAC,WAAA,MAAA"}
